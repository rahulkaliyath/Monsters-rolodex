{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","Response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAEaA,G,kBAAO,SAAAC,GAChB,OACA,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,KAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,aCJbC,EAAW,SAAAR,GACpB,OACA,qBAAKC,UAAU,YAAf,SACQD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OAC3B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJjBO,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACzB,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCkCKG,E,kDArCb,aAAc,IAAD,8BACX,gBAeJH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAdnC,EAAKC,MAAQ,CACXb,SAAS,GACTU,YAAY,IALH,E,gEAUK,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAASkB,S,+BAO7B,IAAD,EACwBC,KAAKN,MAA7Bb,EADA,EACAA,SAASU,EADT,EACSA,YACVU,EAAmBpB,EAASqB,QAAO,SAAA3B,GAAO,OAC7CA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBAEnD,OACE,sBAAK9B,UAAU,MAAf,UACE,+CACA,cAAC,EAAD,CAAYW,YAAa,gBACxBC,aAAce,KAAKf,eACpB,cAAC,EAAD,CAAUJ,SAAWoB,W,GA/BXI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0551b916.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\nexport const Card = props =>{\r\n    return (\r\n    <div className='card-container'>\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set5&size=180x180`} alt=\"\"/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n    )\r\n}","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card.jsx';\r\nexport const CardList = props =>{\r\n    return (\r\n    <div className='card-list'>\r\n           {props.monsters.map(monster => \r\n           <Card key={monster.id} monster={monster} />)}\r\n    </div>\r\n    )\r\n}","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) => (\r\n<input \r\nclassName='search'\r\ntype=\"search\" \r\nplaceholder={placeholder}\r\nonChange={handleChange}/>\r\n);","import React,{Component} from 'react'\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.jsx';\nimport {SearchBox} from './components/search-box/search-box.jsx';\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      monsters:[],\n      searchField:''\n      \n    }; \n  } \n  \ncomponentDidMount(){\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(Response => Response.json())\n  .then(users => this.setState({monsters:users}));\n}\n\nhandleChange = e => {\n  this.setState({searchField: e.target.value})\n}\n\n  render() {\n    const {monsters,searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => \n       monster.name.toLowerCase().includes(searchField.toLowerCase()))\n\n    return (\n      <div className=\"App\">\n        <h1>Human Rolodex</h1>\n        <SearchBox  placeholder ='search people'\n         handleChange={this.handleChange} />\n        <CardList monsters ={filteredMonsters}/>\n      \n    </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}